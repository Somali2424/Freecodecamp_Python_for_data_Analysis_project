# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qiBjxcVuOYhiMDD_zxEojgu0y9QG0DC-
"""

##Importing the dataset

pip install pandas

import pandas as pd

def read(filename):
  with open(filename) as f:
    return f.read()

df = pd.read_csv("adult.data.csv")

df.head()

"""How many people of each race are represented in this dataset? This should be a Pandas series with race names as the index labels. (race column)


"""

race_counts=df['race'].value_counts()

race_counts

"""What is the average age of men?

"""

average_age_men=df[df['sex'] == 'Male']['age'].mean()

print(f"The average age of men is: {average_age_men:.2f}")

"""What is the percentage of people who have a Bachelor's degree?"""

total_people = len(df)
bachelors_count = len(df[df['education'] == 'Bachelors'])
percentage_bachelors = (bachelors_count / total_people) * 100

percentage_bachelors

"""What percentage of people with advanced education make more than 50K?"""

advanced_education = df[df['education'].isin(['Bachelors', 'Masters', 'Doctorate'])]

high_income_advanced_education = advanced_education[advanced_education['salary'] == '>50K']

# Calculate the percentage
percentage_high_income_advanced_education = (len(high_income_advanced_education) / len(advanced_education)) * 100

percentage_high_income_advanced_education

"""What percentage of people without advanced education make more than 50K?"""

non_advanced_education = df[~df['education'].isin(['Bachelors', 'Masters', 'Doctorate'])]
high_income_non_advanced_education = non_advanced_education[non_advanced_education['salary'] == '>50K']

# Calculate the percentage
percentage_high_income_non_advanced_education = (len(high_income_non_advanced_education) / len(non_advanced_education)) * 100

# Display the result
print(f"The percentage of people without advanced education making more than 50K is: {percentage_high_income_non_advanced_education:.2f}%")

"""What is the minimum number of hours a person works per week?"""

min_hours_per_week = df['hours-per-week'].min()

# Display the result
print(f"The minimum number of hours a person works per week is: {min_hours_per_week}")

"""What percentage of the people who work the minimum number of hours per week have a salary of more than 50K?"""

min_hours_per_week = df['hours-per-week'].min()

# Filter rows where the hours-per-week is equal to the minimum and income is >50K
min_hours_df = df[df['hours-per-week'] == min_hours_per_week]
high_income_min_hours = min_hours_df[min_hours_df['salary'] == '>50K']

# Calculate the percentage
percentage_high_income_min_hours = (len(high_income_min_hours) / len(min_hours_df)) * 100

# Display the result
print(f"The percentage of people working the minimum hours per week with a salary >50K is: {percentage_high_income_min_hours:.2f}%")

"""What country has the highest percentage of people that earn >50K and what is that percentage?"""

# Calculate the total number of people in each country
total_people_by_country = df['native-country'].value_counts()

# Calculate the number of people with income >50K in each country
high_income_by_country = df[df['salary'] == '>50K']['native-country'].value_counts()

# Calculate the percentage of people with income >50K in each country
percentage_high_income_by_country = (high_income_by_country / total_people_by_country) * 100

# Find the country with the highest percentage
highest_percentage_country = percentage_high_income_by_country.idxmax()
highest_percentage = percentage_high_income_by_country.max()

# Display the result
print(f"The country with the highest percentage of people earning >50K is {highest_percentage_country}, with a percentage of {highest_percentage:.2f}%.")

"""Identify the most popular occupation for those who earn >50K in India."""

# Filter rows for individuals earning >50K in India
high_income_india = df[(df['salary'] == '>50K') & (df['native-country'] == 'India')]

# Identify the most popular occupation in India for those earning >50K
most_popular_occupation_india = high_income_india['occupation'].value_counts().idxmax()

# Display the result
print(f"The most popular occupation for those earning >50K in India is: {most_popular_occupation_india}")

